"Task 1: Find Top 5 Customers with the Most Purchases in the Last 3 Months"
"과제 1: 지난 3개월 동안 가장 많은 구매를 한 상위 5개 고객 찾기"

SELECT c.customer_id, c.name, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.order_date >= CURRENT_DATE - INTERVAL '3 months'
GROUP BY c.customer_id, c.name
ORDER BY total_orders DESC
LIMIT 5;

"설명:

이 쿼리는 지난 3개월 동안 주문한 수를 기준으로 상위 5개 고객을 검색합니다.
JOIN은 고객과 주문 테이블을 결합하는 데 사용됩니다.
WHERE 조항은 지난 3개월 동안의 주문을 필터링합니다.
그룹 BY는 고객당 총 주문 수를 집계하는 데 사용됩니다.
총 주문별 주문 DESC는 고객을 내림차순으로 주문 수를 기준으로 정렬합니다.
LIMIT 5는 상위 5개 고객으로 결과를 제한합니다"

-------------------------------------------------------------------------------------

"Task 2: Calculate the Total Revenue Generated by Each Customer in the Last 3 Months"
"과제 2: 지난 3개월 동안 각 고객이 창출한 총 수익 계산"

SELECT c.customer_id, c.name, SUM(oi.quantity * oi.price) AS total_revenue
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_items oi ON o.order_id = oi.order_id
WHERE o.order_date >= CURRENT_DATE - INTERVAL '3 months'
GROUP BY c.customer_id, c.name
ORDER BY total_revenue DESC;

"설명:

이 쿼리는 지난 3개월 동안 각 고객이 창출한 총 수익을 계산합니다.
"


-------------------------------------------------------------------------------------


"Task 3: Find the Top 5 Products that Generated the Most Revenue in the Last 3 Months"
"과제 3: 지난 3개월 동안 가장 많은 수익을 올린 상위 5개 제품 찾기"

SELECT p.product_id, p.product_name, SUM(oi.quantity * oi.price) AS total_revenue
FROM products p
JOIN order_items oi ON p.product_id = oi.product_id
JOIN orders o ON oi.order_id = o.order_id
WHERE o.order_date >= CURRENT_DATE - INTERVAL '3 months'
GROUP BY p.product_id, p.product_name
ORDER BY total_revenue DESC
LIMIT 5;


"설명:

이 쿼리는 지난 3개월 동안 창출한 총 수익을 기준으로 상위 5개 제품을 식별합니다.
LIMIT 5는 상위 5개 제품으로 결과를 제한합니다."


-------------------------------------------------------------------------------

"Task 4: Calculate the Average Order Value (AOV) per Customer"
"과제 4: 고객당 평균 주문 금액(AOV) 계산"

SELECT c.customer_id, c.name, 
       AVG(oi.quantity * oi.price) AS average_order_value
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_items oi ON o.order_id = oi.order_id
WHERE o.order_date >= CURRENT_DATE - INTERVAL '3 months'
GROUP BY c.customer_id, c.name
ORDER BY average_order_value DESC;

"설명:
이 쿼리는 지난 3개월 동안의 각 고객의 평균 주문 금액(AOV)을 계산합니다.
결과는 고객별로 그룹화되고 평균 주문 값에 따라 내림차순으로 정렬됩니다."